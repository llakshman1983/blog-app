[{"C:\\Projects\\blog-app\\src\\index.js":"1","C:\\Projects\\blog-app\\src\\App.js":"2","C:\\Projects\\blog-app\\src\\registerServiceWorker.js":"3","C:\\Projects\\blog-app\\src\\containers\\Blog\\Blog.js":"4","C:\\Projects\\blog-app\\src\\axios.js":"5","C:\\Projects\\blog-app\\src\\components\\Post\\Post.js":"6","C:\\Projects\\blog-app\\src\\containers\\Blog\\Posts\\Posts.js":"7","C:\\Projects\\blog-app\\src\\containers\\Blog\\NewPost\\NewPost.js":"8"},{"size":872,"mtime":1610050019563,"results":"9","hashOfConfig":"10"},{"size":351,"mtime":1610085538314,"results":"11","hashOfConfig":"10"},{"size":4022,"mtime":1609711652993,"results":"12","hashOfConfig":"10"},{"size":2288,"mtime":1610234267335,"results":"13","hashOfConfig":"10"},{"size":221,"mtime":1610049975029,"results":"14","hashOfConfig":"10"},{"size":633,"mtime":1610137138058,"results":"15","hashOfConfig":"10"},{"size":1796,"mtime":1610136754582,"results":"16","hashOfConfig":"10"},{"size":1541,"mtime":1610134360869,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1x8drg0",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Projects\\blog-app\\src\\index.js",[],["36","37"],"C:\\Projects\\blog-app\\src\\App.js",[],"C:\\Projects\\blog-app\\src\\registerServiceWorker.js",[],"C:\\Projects\\blog-app\\src\\containers\\Blog\\Blog.js",[],"C:\\Projects\\blog-app\\src\\axios.js",[],"C:\\Projects\\blog-app\\src\\components\\Post\\Post.js",[],"C:\\Projects\\blog-app\\src\\containers\\Blog\\Posts\\Posts.js",["38","39"],"import React, { Component } from \"react\";\r\nimport axios from '../../../axios';\r\nimport Post  from '../../../components/Post/Post';\r\n\r\nimport './Posts.css';\r\n\r\nclass Posts extends Component {\r\n    state = {\r\n        posts: [],        \r\n    }\r\n\r\n    postSelectHander = (id) => {\r\n        this.setState({selectedPostId: id});\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Axios uses promises\r\n        // Asyc call - \r\n        // https://jsonplaceholder.typicode.com/\r\n        console.log(\"Posts > componentDidMount > [Props]\", this.props);\r\n       const blogPosts = axios.get('/posts')\r\n            .then(response => {\r\n                const posts = response.data.slice(0, 5);\r\n                const updatedPosts = posts.map(p => {\r\n                    return {\r\n                        ...p, \r\n                        author: 'Max'\r\n                    }\r\n                });\r\n                this.setState({posts: updatedPosts});\r\n                // this.setState({posts: response.data});\r\n                console.log(\"-----\", response);\r\n       }).catch(error => {\r\n           console.log(error);\r\n           this.setState({error: true});\r\n       });\r\n    }\r\n\r\n    \r\n    render() {\r\n        \r\n        let posts = <b style={{textAlign: 'center'}, {color: 'red'}}>Something Went Wrong</b>;\r\n        if (!this.state.error) {\r\n            posts = this.state.posts.map(post => {\r\n                return <Post \r\n                    key={post.key} \r\n                    title={post.title}\r\n                    author={post.author} \r\n                    clicked={() => this.postSelectHander(post.id)}/>\r\n                }\r\n            );\r\n        }\r\n        return (\r\n            <section className=\"Posts\">\r\n                {posts}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Posts;","C:\\Projects\\blog-app\\src\\containers\\Blog\\NewPost\\NewPost.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":21,"column":14,"nodeType":"46","messageId":"47","endLine":21,"endColumn":23},{"ruleId":"48","severity":1,"message":"49","line":42,"column":52,"nodeType":"50","messageId":"51","endLine":42,"endColumn":53},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'blogPosts' is assigned a value but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]